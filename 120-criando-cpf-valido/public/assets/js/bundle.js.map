{"version":3,"file":"bundle.js","mappings":"mBA+CAA,QAAQC,IAAI,M","sources":["webpack://116-modelowebpack/./src/modules/validaCPF.js"],"sourcesContent":["export default class ValidaCPF{\r\n    constructor(cpfEnviado){\r\n        this.cpfEnviado = cpfEnviado;\r\n\r\n        Object.defineProperty(this, 'cpfLimpo', {\r\n            writable: false,\r\n            enumerable: true,\r\n            configurable: false,\r\n            value: cpfEnviado.replace(/\\D+/g, '')\r\n        });\r\n    }\r\n\r\n    isSequencia(){\r\n        return this.cpfLimpo.charAt(0).repeat(11) === this.cpfLimpo;\r\n    }\r\n\r\n    geraNovoCpf(){\r\n        const cpfParcial = this.cpfLimpo.slice(0, -2); \r\n        const digito1 = ValidaCPF.geraDigito(cpfParcial);\r\n        const digito2 = ValidaCPF.geraDigito(cpfParcial + digito1);\r\n        this.novoCPF = cpfParcial + digito1 + digito2;\r\n    }\r\n\r\n    static geraDigito(cpfParcial){\r\n        let total = 0;\r\n        let regressivo = cpfParcial.length +1;\r\n\r\n        for(let stringNumerica of cpfParcial){\r\n            total += regressivo * Number(stringNumerica);\r\n            regressivo--;\r\n        }\r\n\r\n        const digito = 11 - (total % 11);\r\n        return digito <= 9 ? String(digito) : 0;\r\n    }\r\n\r\n    valida(){\r\n        if(!this.cpfLimpo) return false;\r\n        if(typeof this.cpfLimpo !== 'string') return false;\r\n        if(this.cpfLimpo.length !== 11) return false;\r\n        if(this.isSequencia()) return false;\r\n        this.geraNovoCpf();\r\n\r\n        return this.novoCPF === this.cpfLimpo\r\n    }\r\n}\r\n\r\nconsole.log('fim');"],"names":["console","log"],"sourceRoot":""}